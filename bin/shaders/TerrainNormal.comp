#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D heightMap;

uniform int heightMapRes;
uniform float chunkSize;

void main() {
	ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);

	if(pixel.x == 0 || pixel.y == 0 || pixel.x == heightMapRes - 1 || pixel.y == heightMapRes - 1) {
		return;
	}

	float height = imageLoad(heightMap, pixel).r;
	float fx0 = imageLoad(heightMap, pixel + ivec2(-1.0, 0)).r;
	float fx1 = imageLoad(heightMap, pixel + ivec2(1.0, 0)).r;
	float fy0 = imageLoad(heightMap, pixel + ivec2(0, -1.0)).r;
	float fy1 = imageLoad(heightMap, pixel + ivec2(0, 1.0)).r;

	float eps = chunkSize / float(heightMapRes);

	vec3 normal = vec3((fx0 - fx1) / (2 * eps), 1, (fy0 - fy1) / (2 * eps));
	normal *= (1.0 / normal.y);

	imageStore(heightMap, pixel, vec4(height, normal.x, normal.z, 0.0));
}