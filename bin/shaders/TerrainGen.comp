#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image2D heightMap;

uniform vec3 worldPos;
uniform int heightMapRes;

vec3 permute(vec3 x) {
	return mod(((x * 34.0) + 1.0) * x, 289.0);
}

float snoise(vec2 v) {
	const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);
	vec2 i = floor(v + dot(v, C.yy));
	vec2 x0 = v - i + dot(i, C.xx);
	vec2 i1;
	i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);
	vec4 x12 = x0.xyxy + C.xxzz;
	x12.xy -= i1;
	i = mod(i, 289.0);
	vec3 p = permute(permute(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));
	vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);
	m = m * m;
	m = m * m;
	vec3 x = 2.0 * fract(p * C.www) - 1.0;
	vec3 h = abs(x) - 0.5;
	vec3 ox = floor(x + 0.5);
	vec3 a0 = x - ox;
	m *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);
	vec3 g;
	g.x = a0.x * x0.x + h.x * x0.y;
	g.yz = a0.yz * x12.xz + h.yz * x12.yw;
	float val = 130.0 * dot(m, g);
	return (val + 1.0) / 2.0;
}

float ridgenoise(vec2 v) {
	return 2 * (0.5 - abs(0.5 - snoise(v)));
}

float octaveNoise(vec2 v, int octaves, float freq, float gain) {
	float value = 0.0;
	float amplitude = 1.0;
	float frequency = freq;
	float maxVal = 0.0;

	for(int i = 0; i < octaves; i++) {
		value += snoise(v * frequency) * amplitude;
		maxVal += amplitude;
		amplitude *= gain;
		frequency *= 2.0;
	}

	return value / maxVal;
}

float heightFunc(vec2 v) {
	float highFreq = octaveNoise(v, 10, 0.01, 0.5);
	highFreq = pow(highFreq, 1.4) * 0.05;

	float lowFreq = octaveNoise(v, 4, 0.0005, 0.35);
	lowFreq = pow(lowFreq, 2) * 2;

	float highhighFreq = octaveNoise(v, 6, 2, 0.5) * 0.005;

	float y = lowFreq + highFreq + highhighFreq;
	return y * 256;
}

void main() {
	ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);
	vec2 pixelWorldPos = vec2(pixel) / heightMapRes * 256 + worldPos.xz;

	float height = heightFunc(pixelWorldPos * 2);

	imageStore(heightMap, pixel, vec4(height, 0.0, 0.0, 0.0));
}